kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik-ingress
  namespace: traefik
  labels:
    k8s-app: traefik-ingress-lb
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:2.5.4
        name: traefik-ingress-lb
        resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 50Mi
        ports:
          - name: web
            containerPort: 80
            protocol: TCP
          - name: websecure
            containerPort: 443
            protocol: TCP
          - name: traefik
            containerPort: 9000
            protocol: TCP
        args:
          - "--entryPoints.web.address=:80/tcp"
          - "--entryPoints.websecure.address=:443/tcp"
          - "--entryPoints.traefik.address=:9000/tcp"
          - "--api=true"
          - "--api.dashboard=true"
          - "--api.insecure=true"
          - "--ping=true"
          - "--providers.kubernetescrd"
          - "--providers.kubernetescrd.allowCrossNamespace=true"
          - "--log=true"
          - "--log.level=INFO"
          - "--accesslog=true"
        readinessProbe:
          httpGet:
            path: /ping
            port: 9000
          failureThreshold: 1
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: 9000
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        volumeMounts:
          - mountPath: /data
            name: storage-volume
      volumes:
        - name: storage-volume
          emptyDir: {}